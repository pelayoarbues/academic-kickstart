[OMM v:1.55 f:1 s:4 d:-1]{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 OpenSans;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs34 \cf0 \
\
\
SOME RANDOM THOUGHTS ON PUTTING DATA BASED PRODUCTS IN PRODUCTION\
\
Understand business problem and build a POC in a few days\
\
If you have data, grab it, check it and try to evaluate if it would be large and good enough for answering business needs. If not, try to get internal or external data by yourself. This will let you approximate the cost of obtaining such data.\
\
Once you have made this fast data validation create a pilot version of the solution. If the project is meant to improve an existing solution try to get how well it has been performing. If there is no existing solution, congrats, probably your system will be good enough for fulfilling business needs. \
\
Do you really need Machine Learning to add value to your business?\
\
If there is enough data at hand, machine learning based solutions usually work well almost out of the box. But... model performance is not likely to be your main problem. Most of your problems will be engineering and operations problems.\
\
\
If the answer is yes, start by building an end-to-end pipeline which prepares data, splits it, trains a model, saves the model and creates a registry, saves performance metrics somewhere where you will actually look at them and deploy predictions. This is a great moment to create baseline models: predict the most popular class, predict the mean/median of the target distribution. \
\
\
Create a baseline model made of naive rules\
\
Imagine you have to predict if a building has a lift or not. You could create a naive model based on the building age and number of floors. For instance:\
\
CASE WHEN CONSTRUCTIONYEAR > 1960 & FLOORNUMBER > 3 | FLOORNUMBER > 5 THEN 1 ELSE 0 AS HASLIFT\
\
Obviously there may be other drivers that may help to improve predictions but surely this naive model would make a fair decent job.\
\
\
Deploying to production can mean very different things\
\
Probably you are thinking of online inference via an API but this is one of the hardest scenarios. So if you can, try to avoid it by precomputing predictions in batches.\
}